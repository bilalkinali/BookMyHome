// <auto-generated />
using System;
using System.Collections.Generic;
using AddressServiceDAWA.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AddressServiceDAWA.DatabaseMigration.Migrations
{
    [DbContext(typeof(AddressContext))]
    [Migration("20241016211034_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressServiceDAWA.Domain.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DawaCorrelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("AddressHashCode", "AddressServiceDAWA.Domain.Entity.Address.AddressHashCode#AddressHashCode", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("HashCode")
                                .HasColumnType("int");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("DawaAddress", "AddressServiceDAWA.Domain.Entity.Address.DawaAddress#DawaAddress", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Category")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DawaErrorReasonPhrase")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DawaHttpError")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("DawaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("ValidationState")
                                .HasColumnType("int");
                        });

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
